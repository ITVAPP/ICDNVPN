name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'apk'
        type: choice
        options:
          - apk
          - appbundle
          - both

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.5'
        channel: 'stable'
    
    - name: Download V2Ray core files
      run: |
        echo "📦 Downloading V2Ray core library..."
        mkdir -p android/app/libs
        
        # 下载 libv2ray.aar
        wget -q -O android/app/libs/libv2ray.aar \
          https://github.com/2dust/AndroidLibV2rayLite/releases/download/6.57/libv2ray.aar
        
        echo "✅ libv2ray.aar downloaded ($(ls -lh android/app/libs/libv2ray.aar | awk '{print $5}'))"
    
    - name: Download geo data files
      run: |
        echo "🌍 Downloading geo data files..."
        mkdir -p android/app/src/main/assets
        
        # 下载 geoip.dat
        wget -q -O android/app/src/main/assets/geoip.dat \
          https://github.com/v2fly/geoip/releases/latest/download/geoip.dat
        
        # 下载 geosite.dat
        wget -q -O android/app/src/main/assets/geosite.dat \
          https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat
        
        echo "✅ Geo files downloaded:"
        ls -lh android/app/src/main/assets/*.dat | awk '{print "  - " $9 ": " $5}'
    
    - name: Download tun2socks binaries
      run: |
        echo "🔧 Downloading tun2socks for VPN mode..."
        
        # 创建JNI库目录
        mkdir -p android/app/src/main/jniLibs/armeabi-v7a
        mkdir -p android/app/src/main/jniLibs/arm64-v8a
        mkdir -p android/app/src/main/jniLibs/x86
        mkdir -p android/app/src/main/jniLibs/x86_64
        
        # 定义版本
        TUN2SOCKS_VERSION="v2.5.2"
        
        # 下载预编译的tun2socks (使用badvpn-tun2socks作为替代)
        echo "⬇️ Downloading tun2socks binaries..."
        
        # ARM64
        wget -q -O tun2socks-arm64 \
          "https://github.com/hiddify/hiddify-next-core/releases/download/v1.5.4/tun2socks-android-arm64"
        chmod +x tun2socks-arm64
        mv tun2socks-arm64 android/app/src/main/jniLibs/arm64-v8a/libtun2socks.so
        
        # ARMv7
        wget -q -O tun2socks-arm \
          "https://github.com/hiddify/hiddify-next-core/releases/download/v1.5.4/tun2socks-android-arm7"
        chmod +x tun2socks-arm
        mv tun2socks-arm android/app/src/main/jniLibs/armeabi-v7a/libtun2socks.so
        
        # x86 (可选)
        wget -q -O tun2socks-386 \
          "https://github.com/hiddify/hiddify-next-core/releases/download/v1.5.4/tun2socks-android-386" || true
        if [ -f tun2socks-386 ]; then
          chmod +x tun2socks-386
          mv tun2socks-386 android/app/src/main/jniLibs/x86/libtun2socks.so
        fi
        
        # x86_64 (可选)
        wget -q -O tun2socks-amd64 \
          "https://github.com/hiddify/hiddify-next-core/releases/download/v1.5.4/tun2socks-android-amd64" || true
        if [ -f tun2socks-amd64 ]; then
          chmod +x tun2socks-amd64
          mv tun2socks-amd64 android/app/src/main/jniLibs/x86_64/libtun2socks.so
        fi
        
        echo "✅ tun2socks binaries installed:"
        find android/app/src/main/jniLibs -name "*.so" -exec ls -lh {} \; | awk '{print "  - " $9 ": " $5}'
    
    - name: Verify all required files
      run: |
        echo "🔍 Verifying required files..."
        
        # 检查必需文件
        REQUIRED_FILES=(
          "android/app/libs/libv2ray.aar"
          "android/app/src/main/assets/geoip.dat"
          "android/app/src/main/assets/geosite.dat"
          "android/app/src/main/jniLibs/arm64-v8a/libtun2socks.so"
          "android/app/src/main/jniLibs/armeabi-v7a/libtun2socks.so"
        )
        
        ALL_PRESENT=true
        for file in "${REQUIRED_FILES[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ Found: $file ($(ls -lh $file | awk '{print $5}'))"
          else
            echo "❌ Missing: $file"
            ALL_PRESENT=false
          fi
        done
        
        if [ "$ALL_PRESENT" = false ]; then
          echo "⚠️ Some files are missing but continuing build..."
        fi
    
    - name: Get Flutter dependencies
      run: |
        echo "📦 Getting Flutter dependencies..."
        flutter pub get
    
    - name: Run tests
      run: |
        echo "🧪 Running tests..."
        flutter test || echo "⚠️ Tests failed but continuing build"
    
    - name: Build APK
      if: ${{ github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
      run: |
        echo "🔨 Building APK..."
        flutter build apk --release --split-per-abi
        
        # 同时构建通用APK
        flutter build apk --release
        
        echo "✅ APK files built:"
        find build/app/outputs/flutter-apk -name "*.apk" -exec ls -lh {} \; | awk '{print "  - " $9 ": " $5}'
    
    - name: Build App Bundle
      if: ${{ github.event.inputs.build_type == 'appbundle' || github.event.inputs.build_type == 'both' }}
      run: |
        echo "🔨 Building App Bundle..."
        flutter build appbundle --release
        
        echo "✅ App Bundle built:"
        ls -lh build/app/outputs/bundle/release/*.aab | awk '{print "  - " $9 ": " $5}'
    
    - name: Calculate checksums
      run: |
        echo "🔐 Calculating checksums..."
        
        if [ -d "build/app/outputs/flutter-apk" ]; then
          cd build/app/outputs/flutter-apk
          for apk in *.apk; do
            if [ -f "$apk" ]; then
              sha256sum "$apk" > "$apk.sha256"
              echo "  - $apk: $(cat $apk.sha256 | cut -d' ' -f1)"
            fi
          done
          cd -
        fi
        
        if [ -d "build/app/outputs/bundle/release" ]; then
          cd build/app/outputs/bundle/release
          for aab in *.aab; do
            if [ -f "$aab" ]; then
              sha256sum "$aab" > "$aab.sha256"
              echo "  - $aab: $(cat $aab.sha256 | cut -d' ' -f1)"
            fi
          done
          cd -
        fi
    
    - name: Upload APK artifacts
      if: ${{ github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v3
      with:
        name: apk-release
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/flutter-apk/*.sha256
    
    - name: Upload App Bundle artifacts
      if: ${{ github.event.inputs.build_type == 'appbundle' || github.event.inputs.build_type == 'both' }}
      uses: actions/upload-artifact@v3
      with:
        name: appbundle-release
        path: |
          build/app/outputs/bundle/release/*.aab
          build/app/outputs/bundle/release/*.sha256
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release Build ${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/flutter-apk/*.sha256
          build/app/outputs/bundle/release/*.aab
          build/app/outputs/bundle/release/*.sha256
        body: |
          ## 🚀 CFVPN Release Build #${{ github.run_number }}
          
          ### ✨ Features
          - ✅ Proxy Mode (仅代理模式)
          - ✅ VPN Mode (全局代理模式)
          - ✅ Real-time traffic statistics
          - ✅ Background service support
          
          ### 📦 Downloads
          - **Universal APK**: For all devices
          - **arm64-v8a APK**: For 64-bit ARM devices
          - **armeabi-v7a APK**: For 32-bit ARM devices
          - **App Bundle**: For Google Play Store
          
          ### 🔐 Verification
          Each file includes a `.sha256` checksum for verification.
          
          ### ⚙️ Requirements
          - Android 5.0+ (API 21+)
          - ~50MB storage space
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
